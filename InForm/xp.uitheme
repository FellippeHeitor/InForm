'---------------------------------------------------------------------------------
'*** XP.UITHEME ***
'UI theme mimicking Windows XP's controls style
'Image data embeded into SUB __UI_ImageData$
'Uses hardware images.
'---------------------------------------------------------------------------------
'VWATCH64:OFF
FUNCTION __UI_ThemeSetup& (Attribute AS STRING)
    SELECT CASE Attribute
        CASE "scrollbar.width"
            __UI_ThemeSetup& = 17
        CASE "scrollbar.height"
            __UI_ThemeSetup& = 17
        CASE "menubar.offset"
            __UI_ThemeSetup& = 8
        CASE "menuitem.offset"
            __UI_ThemeSetup& = 22
        CASE "caption.indent"
            __UI_ThemeSetup& = 5
        CASE "button.width"
            __UI_ThemeSetup& = 20
        CASE "button.height"
            __UI_ThemeSetup& = 23
        CASE "button.topmargin"
            __UI_ThemeSetup& = 3
        CASE "button.leftmargin"
            __UI_ThemeSetup& = 4
    END SELECT
END FUNCTION

'---------------------------------------------------------------------------------
FUNCTION __UI_DefaultColor~& (ControlType AS _BYTE, Attribute AS _BYTE)
    DIM Colors(1 TO 6) AS _UNSIGNED LONG

    '.ForeColor
    Colors(1) = _RGB32(0, 0, 0)
    IF ControlType <> __UI_Type_Form AND Control(__UI_FormID).ForeColor <> Colors(1) THEN _
        Colors(1) = Control(__UI_FormID).ForeColor
    '.BackColor
    Colors(2) = _RGB32(235, 233, 237)
    IF ControlType <> __UI_Type_Form AND Control(__UI_FormID).BackColor <> Colors(2) THEN _
        Colors(2) = Control(__UI_FormID).BackColor
    '.SelectedForeColor
    Colors(3) = _RGB32(255, 255, 255)
    IF ControlType <> __UI_Type_Form AND Control(__UI_FormID).SelectedForeColor <> Colors(3) THEN _
        Colors(3) = Control(__UI_FormID).SelectedForeColor
    '.SelectedBackColor
    Colors(4) = _RGB32(78, 150, 216)
    IF ControlType <> __UI_Type_Form AND Control(__UI_FormID).SelectedBackColor <> Colors(4) THEN _
        Colors(4) = Control(__UI_FormID).SelectedBackColor
    '.BorderColor
    Colors(5) = _RGB32(167, 166, 170)
    IF ControlType <> __UI_Type_Form AND Control(__UI_FormID).BorderColor <> Colors(5) THEN _
        Colors(5) = Control(__UI_FormID).BorderColor
    'Tip color (global property)
    Colors(6) = _RGB32(255, 255, 225)

    'Specific cases:
    SELECT CASE ControlType
        CASE __UI_Type_TextBox, __UI_Type_ListBox, __UI_Type_DropdownList
            Colors(2) = _RGB32(255, 255, 255)
    END SELECT

    __UI_DefaultColor~& = Colors(Attribute)
END FUNCTION

'---------------------------------------------------------------------------------
FUNCTION __UI_LoadThemeImage& (FileName$)
    '__UI_LoadThemeImage& must return a valid image handle.
    'The image can be generated at run time (requested only once by the engine),
    'or loaded from disk. Image details (width, height, sub-image details if any,
    'are to be returned via __UI_ThemeSetup&.
    '
    'Required images:
    '   - button         normal buttons - all states, stretched
    '   - radiobutton    radio buttons, true/false - all states, fixed size
    '   - checkbox       check boxes, true/false - all states, fixed size
    '   - progresstrack  progress bar, container - single image, corners fixed, middle stretched
    '     progresschunk  progress bar, progress indicator - single image, stretched
    '   - slidertrack    slider/trackbar, track - single image, corners fixed, middle stretched
    '     sliderdown     slider/trackbar, slider - all states, fixed size
    '   - scrollbuttons  vertical scrollbar, up/down buttons, all states, fixed size
    '     scrolltrack    vertical scrollbar, track, all states, stretched
    '     scrollthumb    vertical scrollbar, thumb, all states, stretched vertically
    '   - arrows         up/down/left/right arrows, all states, fixed size
    '                    overlay for button, when used in a dropdown list control
    '   - frame          frame border, single image, corners fixed, mid-sections stretched
    '   - menucheckmark  check mark for menu items - normal, selected, inactive
    '   - notfound       picture box - used as placeholder when image loading fails

    STATIC ThemeImage() AS LONG, Setup AS _BYTE
    DIM TempImage AS LONG, TempIndex AS LONG
    DIM imgPath$, realFileName$, colorToClear AS _UNSIGNED LONG

    IF Setup = False THEN
        REDIM ThemeImage(1 TO 14) AS LONG
        Setup = True
    END IF

    imgPath$ = "InForm/xp/"

    SELECT CASE FileName$
        CASE "button"
            TempIndex = 1
            realFileName$ = "ROYALE_BUTTON_BMP.bmp"
        CASE "radiobutton"
            TempIndex = 2
            realFileName$ = "ROYALE_RADIOBUTTON13_BMP.bmp"
        CASE "checkbox"
            TempIndex = 3
            realFileName$ = "ROYALE_CHECKBOX13_BMP.bmp"
        CASE "progresstrack"
            TempIndex = 4
            realFileName$ = "ROYALE_PROGRESSTRACK_BMP.bmp"
        CASE "progresschunk"
            TempIndex = 5
            realFileName$ = "ROYALE_PROGRESSCHUNK_BMP.bmp"
        CASE "slidertrack"
            TempIndex = 6
            realFileName$ = "ROYALE_SLIDERTRACK_BMP.bmp"
        CASE "sliderdown"
            TempIndex = 7
            realFileName$ = "ROYALE_TRACKBARDOWN13_BMP.bmp"
            colorToClear = _RGB32(242, 241, 231)
        CASE "scrollbuttons"
            TempIndex = 8
            realFileName$ = "ROYALE_SCROLLARROWS_BMP.bmp"
        CASE "scrolltrack"
            TempIndex = 9
            realFileName$ = "ROYALE_SCROLLSHAFTVERTICAL_BMP.bmp"
        CASE "scrollthumb"
            TempIndex = 10
            realFileName$ = "ROYALE_SCROLLTHUMBVERTICAL_BMP.bmp"
        CASE "arrows"
            TempIndex = 11
            realFileName$ = "ROYALE_SCROLLARROWGLYPHS_BMP.bmp"
            colorToClear = _RGB32(255, 0, 255)
        CASE "frame"
            TempIndex = 12
            realFileName$ = "ROYALE_GROUPBOX_BMP.bmp"
            colorToClear = _RGB32(255, 0, 255)
        CASE "menucheckmark"
            TempIndex = 13
            realFileName$ = "menucheckmark.bmp"
            colorToClear = _RGB32(255, 0, 255)
        CASE "notfound"
            TempIndex = 14
            realFileName$ = "notfound.bmp"
            colorToClear = _RGB32(255, 0, 255)
    END SELECT

    IF ThemeImage(TempIndex) = 0 THEN
        TempImage = _LOADIMAGE(imgPath$ + realFileName$, 32)
        IF TempImage < -1 THEN
            ThemeImage(TempIndex) = TempImage
            IF colorToClear THEN _CLEARCOLOR colorToClear, ThemeImage(TempIndex)
            __UI_LoadThemeImage& = TempImage
        ELSE
            ERROR 53
        END IF
    ELSE
        __UI_LoadThemeImage& = ThemeImage(TempIndex)
    END IF
END FUNCTION
'VWATCH64:ON
